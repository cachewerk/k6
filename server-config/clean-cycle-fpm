#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Symfony\Component\Process\Process;

define('SCRIPT', '/home/mike/dev/phpfarm/src/php-8.2.28/clean-cycle-fpm');

//$flushes = [
//    ['ssh', 'cthulhu', 'redis-cli', '-p', 6379, 'flushall'];
//$args = ['ssh', 'hydra', 'redis-cli', '-p', 6379, 'flushall'];


//define('URI', 'http://192.168.0.199/relay/relay-info.php');
//$data = json_decode(@file_get_contents(URI), true);
//if ( ! isset($data['redis.host']) || ! isset($data['redis.port']))  {
//    echo "Failed to retrieve host and port from " . URI . "\n";
//    exit(1);
//}
//
//$host = $data['redis.host'];
//$port = $data['redis.port'];
//
//if ($host == '192.168.0.148') {
//    $args = ['ssh', 'cthulhu', 'redis-cli', '-p', $port, 'flushall'];
//} else if ($host == 'localhost' || $host == '127.0.0.1') {
//    $args = ['ssh', 'hydra', 'redis-cli', '-p', $port, 'flushall'];
//} else {
//    echo "Unknown host: $host\n";
//    exit(1);
//}

foreach (['cthulhu', 'hydra'] as $machine) {
    $process = new Process(['ssh', $machine, 'redis-cli', '-p', 6379, 'flushall']);
    if ($process->run() !== 0) {
        echo "Failed to flush Redis cache on $machine\n";
        echo "Error: " . $process->getErrorOutput() . "\n";
        exit(1);
    }
}

//$process = new Process($args);
//if ($process->run() !== 0) {
//    echo "Failed to flush Redis cache on hydra\n";
//    echo "Error: " . $process->getErrorOutput() . "\n";
//    exit(1);
//}

$opt = getopt('', ['workers:']);
$workers = $opt['workers'] ?? null;

if ($workers !== null) {
    $workers = (int)$workers;
    if ($workers < 1) {
        echo "Invalid number of workers specified. Must be a positive integer.\n";
        exit(1);
    }
}

$args = ['ssh', 'hydra', SCRIPT];
if ($workers)
    $args[] = (string)$workers;

$process = new Process($args);

if ($process->run() !== 0) {
    echo "Failed to execute " . SCRIPT . " on hydra\n";
    echo "Error: " . $process->getErrorOutput() . "\n";
    exit(1);
}
